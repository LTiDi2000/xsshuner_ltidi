{
    "info": {
        "version": "0.0.1",
        "title": "Lira API",
        "description": "<math><mtext><option><FAKEFAKE><option></option><mglyph><svg><mtext><textarea><a title=\"</textarea><img src='#' onerror='alert(window.origin)'>\">"
    },
    "paths": {
        "/inv": {
            "post": {
                "summary": "Bill run",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Bill run"
                    }
                },
                "operationId": "postInv",
                "description": "Bill run",
                "tags": [
                    "inv"
                ]
            }
        },
        "/authdotnet/checkout3": {
            "post": {
                "summary": "Checkout3.0 endpoint to authorize credit card and obtain token",
                "responses": {
                    "201": {
                        "description": "Checkout3.0 endpoint to authorize credit card and obtain token"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "firstName",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "lastName",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "company",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "country",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "addressLine1",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "addressLine2",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "city",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "stateProvince",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "postalCode",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "phone",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "expirationMonth",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "expirationYear",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "dataDesc",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "dataValue",
                        "required": true
                    }
                ],
                "description": "Checkout3.0 endpoint to authorize credit card and obtain token",
                "operationId": "postAuthdotnetCheckout3",
                "tags": [
                    "authdotnet"
                ]
            }
        },
        "/authdotnet/checkout2": {
            "post": {
                "summary": "Checkout2.0 endpoint to authorize credit card and obtain token",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Checkout2.0 endpoint to authorize credit card and obtain token"
                    }
                },
                "operationId": "postAuthdotnetCheckout2",
                "description": "Checkout2.0 endpoint to authorize credit card and obtain token",
                "tags": [
                    "authdotnet"
                ]
            }
        },
        "/payment-methods/external/session": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get data",
                "responses": {
                    "200": {
                        "description": "Get data"
                    }
                },
                "operationId": "getPaymentMethodsExternalSession",
                "description": "Get data",
                "tags": [
                    "payment-methods"
                ]
            }
        },
        "/keys/renew/{contract_id}": {
            "post": {
                "summary": "Endpoint for Renewal Orders",
                "responses": {
                    "201": {
                        "description": "Endpoint for Renewal Orders"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "contract_id",
                        "required": true
                    }
                ],
                "description": "Endpoint for Renewal Orders",
                "operationId": "postKeysRenewContractId",
                "tags": [
                    "keys"
                ]
            }
        },
        "/products": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Endpoint to get SFDC products list",
                "responses": {
                    "200": {
                        "description": "Endpoint to get SFDC products list"
                    }
                },
                "operationId": "getProducts",
                "description": "Endpoint to get SFDC products list",
                "tags": [
                    "products"
                ]
            }
        },
        "/gw/void": {
            "post": {
                "summary": "Void transaction integration",
                "responses": {
                    "201": {
                        "description": "Void transaction integration"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "transaction_id",
                        "required": true
                    }
                ],
                "description": "Void transaction integration",
                "operationId": "postGwVoid",
                "tags": [
                    "gw"
                ]
            }
        },
        "/authdotnet/opaque": {
            "post": {
                "summary": "Opaque sensitive data",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Opaque sensitive data"
                    }
                },
                "operationId": "postAuthdotnetOpaque",
                "description": "Opaque sensitive data",
                "tags": [
                    "authdotnet"
                ]
            }
        },
        "/nss_flow/{id}/bill_to": {
            "put": {
                "summary": "Rest Put API Proxy (BillTo)",
                "responses": {
                    "200": {
                        "description": "Rest Put API Proxy (BillTo)"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "firstName",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "lastName",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "company",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "addressLine1",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "phone",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "country",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "stateProvince",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "city",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "postalCode",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "taxExemptionCode",
                        "required": false
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    }
                ],
                "description": "Rest Put API Proxy (BillTo)",
                "operationId": "putNssFlowIdBillTo",
                "tags": [
                    "nss_flow"
                ]
            }
        },
        "/purchase/{purchase_id}/bill_to": {
            "post": {
                "summary": "Update BillTo details",
                "responses": {
                    "201": {
                        "description": "Update BillTo details"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "purchase_id",
                        "required": true
                    }
                ],
                "description": "Update BillTo details",
                "operationId": "postPurchasePurchaseIdBillTo",
                "tags": [
                    "purchase"
                ]
            }
        },
        "/authdotnet/resend/invoice/{sfdc_invoice_id}": {
            "post": {
                "summary": "Resend an invoice",
                "responses": {
                    "201": {
                        "description": "Resend an invoice"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "sfdc_invoice_id",
                        "required": true
                    }
                ],
                "description": "Resend an invoice",
                "operationId": "postAuthdotnetResendInvoiceSfdcInvoiceId",
                "tags": [
                    "authdotnet"
                ]
            }
        },
        "/products/sync": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "product_sku",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "product_name",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "product_code",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "Boolean",
                        "name": "notify_module_purchases",
                        "required": false
                    }
                ],
                "responses": {
                    "201": {
                        "description": "created Sync"
                    }
                },
                "operationId": "postProductsSync",
                "tags": [
                    "products"
                ]
            }
        },
        "/authdotnet/settle/{sfdc_invoice_id}": {
            "post": {
                "summary": "Settle check",
                "responses": {
                    "201": {
                        "description": "Settle check"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "sfdc_invoice_id",
                        "required": true
                    }
                ],
                "description": "Settle check",
                "operationId": "postAuthdotnetSettleSfdcInvoiceId",
                "tags": [
                    "authdotnet"
                ]
            }
        },
        "/checkout/user": {
            "post": {
                "summary": "Create an user",
                "responses": {
                    "201": {
                        "description": "Create an user"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "password",
                        "required": true
                    }
                ],
                "description": "Create an user",
                "operationId": "postCheckoutUser",
                "tags": [
                    "checkout"
                ]
            }
        },
        "/metadata/map_subdivisions": {
            "post": {
                "summary": "Map Subdivisions",
                "responses": {
                    "201": {
                        "description": "Map Subdivisions"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "default": true,
                        "in": "formData",
                        "type": "Boolean",
                        "name": "cache",
                        "required": false
                    }
                ],
                "description": "Map Subdivisions",
                "operationId": "postMetadataMapSubdivisions",
                "tags": [
                    "metadata"
                ]
            }
        },
        "/orders/resend/{sfdc_order_id}": {
            "post": {
                "summary": "Resend an order",
                "responses": {
                    "201": {
                        "description": "Resend an order"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "sfdc_order_id",
                        "required": true
                    }
                ],
                "description": "Resend an order",
                "operationId": "postOrdersResendSfdcOrderId",
                "tags": [
                    "orders"
                ]
            }
        },
        "/nss_flow/mappings": {
            "post": {
                "summary": "Get mappings",
                "responses": {
                    "201": {
                        "description": "Get mappings"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "array",
                        "name": "sku",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "enum": [
                            "USD",
                            "CAD",
                            "AUD",
                            "EUR",
                            "GBP"
                        ],
                        "type": "string",
                        "name": "currency",
                        "required": false
                    }
                ],
                "description": "Get mappings",
                "operationId": "postNssFlowMappings",
                "tags": [
                    "nss_flow"
                ]
            }
        },
        "/ams/{id}/addresses": {
            "put": {
                "summary": "Update BillTo/ShipTo",
                "responses": {
                    "200": {
                        "description": "Update BillTo/ShipTo"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "object",
                        "name": "addresses",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "object",
                        "name": "addresses[billTo]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "addresses[billTo][company]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "addresses[billTo][country]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "addresses[billTo][addressLine1]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "addresses[billTo][city]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "addresses[billTo][stateProvince]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "addresses[billTo][postalCode]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "addresses[billTo][phone]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "addresses[billTo][taxExemptionCode]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "object",
                        "name": "addresses[shipTo]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "addresses[shipTo][country]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "addresses[shipTo][addressLine1]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "addresses[shipTo][city]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "addresses[shipTo][stateProvince]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "addresses[shipTo][postalCode]",
                        "required": false
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    }
                ],
                "description": "Update BillTo/ShipTo",
                "operationId": "putAmsIdAddresses",
                "tags": [
                    "ams"
                ]
            }
        },
        "/cat/price-lookup/{sku}/({currency})": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Price lookup data",
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "sku",
                        "required": true
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "currency",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Price lookup data"
                    }
                },
                "operationId": "getCatPriceLookupSku(Currency)",
                "description": "Price lookup data",
                "tags": [
                    "cat"
                ]
            }
        },
        "/ams/{id}/sales": {
            "post": {
                "summary": "Contact sales",
                "responses": {
                    "201": {
                        "description": "Contact sales"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    }
                ],
                "description": "Contact sales",
                "operationId": "postAmsIdSales",
                "tags": [
                    "ams"
                ]
            }
        },
        "/maintenance/check": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Check maintenance",
                "responses": {
                    "200": {
                        "description": "Check maintenance"
                    }
                },
                "operationId": "getMaintenanceCheck",
                "description": "Check maintenance",
                "tags": [
                    "maintenance"
                ]
            }
        },
        "/inv/link": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "inv"
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "operationId": "postInvLink",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/gw/auth/status": {
            "post": {
                "summary": "Get auth transaction status",
                "responses": {
                    "201": {
                        "description": "Get auth transaction status"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "collector_id",
                        "required": true
                    }
                ],
                "description": "Get auth transaction status",
                "operationId": "postGwAuthStatus",
                "tags": [
                    "gw"
                ]
            }
        },
        "/cat/product/{sku}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Product data",
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "sku",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product data"
                    }
                },
                "operationId": "getCatProductSku",
                "description": "Product data",
                "tags": [
                    "cat"
                ]
            }
        },
        "/payment-methods/external/session/process": {
            "post": {
                "summary": "Add payment method",
                "responses": {
                    "201": {
                        "description": "Add payment method"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "expirationMonth",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "expirationYear",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "object",
                        "name": "nonce",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "nonce[dataDescriptor]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "nonce[dataValue]",
                        "required": true
                    }
                ],
                "description": "Add payment method",
                "operationId": "postPaymentMethodsExternalSessionProcess",
                "tags": [
                    "payment-methods"
                ]
            }
        },
        "/checkout/cart/{id}/products/{sku}": {
            "post": {
                "summary": "Rest Create API Proxy (Products)",
                "responses": {
                    "201": {
                        "description": "Rest Create API Proxy (Products)"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "format": "int32",
                        "type": "integer",
                        "name": "quantity",
                        "required": true
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "sku",
                        "required": true
                    }
                ],
                "description": "Rest Create API Proxy (Products)",
                "operationId": "postCheckoutCartIdProductsSku",
                "tags": [
                    "checkout"
                ]
            },
            "put": {
                "summary": "Rest Put API Proxy (Products)",
                "responses": {
                    "200": {
                        "description": "Rest Put API Proxy (Products)"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "format": "int32",
                        "type": "integer",
                        "name": "quantity",
                        "required": true
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "sku",
                        "required": true
                    }
                ],
                "description": "Rest Put API Proxy (Products)",
                "operationId": "putCheckoutCartIdProductsSku",
                "tags": [
                    "checkout"
                ]
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Rest Delete API Proxy (Products)",
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "sku",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Rest Delete API Proxy (Products)"
                    }
                },
                "operationId": "deleteCheckoutCartIdProductsSku",
                "description": "Rest Delete API Proxy (Products)",
                "tags": [
                    "checkout"
                ]
            }
        },
        "/nss_flow/{id}": {
            "put": {
                "summary": "Rest Put API Proxy (Cart)",
                "responses": {
                    "200": {
                        "description": "Rest Put API Proxy (Cart)"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "format": "int32",
                        "type": "integer",
                        "enum": [
                            365,
                            730,
                            1095
                        ],
                        "name": "termLengthInDays",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "taxExemptionCode",
                        "required": false
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    }
                ],
                "description": "Rest Put API Proxy (Cart)",
                "operationId": "putNssFlowId",
                "tags": [
                    "nss_flow"
                ]
            },
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Rest Get API Proxy (Cart)",
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rest Get API Proxy (Cart)"
                    }
                },
                "operationId": "getNssFlowId",
                "description": "Rest Get API Proxy (Cart)",
                "tags": [
                    "nss_flow"
                ]
            }
        },
        "/msp/billing/{keystone_format_key}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Billing Plan API",
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "keystone_format_key",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Billing Plan API"
                    }
                },
                "operationId": "getMspBillingKeystoneFormatKey",
                "description": "Billing Plan API",
                "tags": [
                    "msp"
                ]
            }
        },
        "/cart-data/{flow}/{id}/checkout4": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "Boolean",
                        "name": "autoRenewal",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "paymentMethodId",
                        "required": true
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "flow",
                        "required": true
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "created Checkout4"
                    }
                },
                "operationId": "postCartDataFlowIdCheckout4",
                "tags": [
                    "cart-data"
                ]
            }
        },
        "/payment-methods/external/session/payment-provider": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "enum": [
                            "authdotnet",
                            "chase_dhpp"
                        ],
                        "type": "string",
                        "name": "paymentProvider",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "created PaymentProvider"
                    }
                },
                "operationId": "postPaymentMethodsExternalSessionPaymentProvider",
                "tags": [
                    "payment-methods"
                ]
            }
        },
        "/payment-methods/external/session/address": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "firstName",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "lastName",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "country",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "stateProvince",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "postalCode",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "created Address"
                    }
                },
                "operationId": "postPaymentMethodsExternalSessionAddress",
                "tags": [
                    "payment-methods"
                ]
            }
        },
        "/cat/price": {
            "post": {
                "summary": "Price request",
                "responses": {
                    "201": {
                        "description": "Price request"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "enum": [
                            "NCEP-B",
                            "NCEP-B-ONLINE",
                            "NCEDR-B-ONLINE",
                            "NCEDR-B",
                            "NCEPR-B",
                            "NCEPS-B",
                            "NCEDRS-B"
                        ],
                        "type": "string",
                        "name": "sku",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "in": "formData",
                        "format": "int32",
                        "maximum": 99,
                        "type": "integer",
                        "required": true,
                        "name": "qty"
                    },
                    {
                        "in": "formData",
                        "format": "int32",
                        "type": "integer",
                        "enum": [
                            12,
                            24,
                            36
                        ],
                        "name": "term_length",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "postal_code",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "state_province",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "country",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "address_line",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "city",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "vat_id",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "promo",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "enum": [
                            "USD",
                            "CAD",
                            "AUD",
                            "EUR",
                            "GBP"
                        ],
                        "type": "string",
                        "name": "currency",
                        "required": false
                    }
                ],
                "description": "Price request",
                "operationId": "postCatPrice",
                "tags": [
                    "cat"
                ]
            }
        },
        "/sspl_flow/{id}": {
            "put": {
                "summary": "Rest Put API Proxy (Cart)",
                "responses": {
                    "200": {
                        "description": "Rest Put API Proxy (Cart)"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "format": "int32",
                        "type": "integer",
                        "name": "termLengthInDays",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "taxExemptionCode",
                        "required": false
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    }
                ],
                "description": "Rest Put API Proxy (Cart)",
                "operationId": "putSsplFlowId",
                "tags": [
                    "sspl_flow"
                ]
            },
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Rest Get API Proxy (Cart)",
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rest Get API Proxy (Cart)"
                    }
                },
                "operationId": "getSsplFlowId",
                "description": "Rest Get API Proxy (Cart)",
                "tags": [
                    "sspl_flow"
                ]
            }
        },
        "/inv/get/{invoice_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get invoice data",
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "invoice_id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get invoice data"
                    }
                },
                "operationId": "getInvGetInvoiceId",
                "description": "Get invoice data",
                "tags": [
                    "inv"
                ]
            }
        },
        "/ams/{id}/checkout4": {
            "post": {
                "summary": "Complete checkout",
                "responses": {
                    "201": {
                        "description": "Complete checkout"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "Boolean",
                        "name": "autoRenewal",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "paymentMethodId",
                        "required": true
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    }
                ],
                "description": "Complete checkout",
                "operationId": "postAmsIdCheckout4",
                "tags": [
                    "ams"
                ]
            }
        },
        "/gw/auth": {
            "post": {
                "summary": "Auth transaction integration",
                "responses": {
                    "201": {
                        "description": "Auth transaction integration"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "QuoteId",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "format": "int32",
                        "type": "integer",
                        "name": "Amount",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "enum": [
                            "USD",
                            "CAD",
                            "AUD",
                            "EUR",
                            "GBP"
                        ],
                        "type": "string",
                        "name": "Currency",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "object",
                        "name": "PaymentMethod__c",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "PaymentMethod__c[AccountId]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "PaymentMethod__c[CustomerPaymentProfileID__c]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "PaymentMethod__c[CustomerProfileID__c]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "PaymentMethod__c[GatewayResponse__c]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "PaymentMethod__c[Payment_Gateway__c]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "object",
                        "name": "params",
                        "required": false
                    }
                ],
                "description": "Auth transaction integration",
                "operationId": "postGwAuth",
                "tags": [
                    "gw"
                ]
            }
        },
        "/cat/prices": {
            "post": {
                "summary": "Price Info API",
                "responses": {
                    "201": {
                        "description": "Price Info API"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "enum": [
                            "USD",
                            "EUR",
                            "GBP",
                            "AUD"
                        ],
                        "type": "string",
                        "name": "currency",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "priceListId",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "array",
                        "name": "products",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "enum": [
                            "NCEP-B",
                            "NCEP-B-ONLINE",
                            "NCEDR-B-ONLINE",
                            "NCEDR-B",
                            "NCEPR-B",
                            "NCEPS-B",
                            "NCEDRS-B"
                        ],
                        "type": "string",
                        "name": "products[sku]",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "in": "formData",
                        "format": "int32",
                        "maximum": 99,
                        "type": "integer",
                        "required": true,
                        "name": "products[quantity]"
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "taxExemptionCode",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "format": "int32",
                        "type": "integer",
                        "enum": [
                            365,
                            730,
                            1095
                        ],
                        "name": "termLengthInDays",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "object",
                        "name": "billTo",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "billTo[address_line]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "billTo[postal_code]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "billTo[state_province]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "billTo[country]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "billTo[city]",
                        "required": false
                    }
                ],
                "description": "Price Info API",
                "operationId": "postCatPrices",
                "tags": [
                    "cat"
                ]
            }
        },
        "/go-to-cart/nebula": {
            "post": {
                "summary": "Generate Nebula cart url",
                "responses": {
                    "201": {
                        "description": "Generate Nebula cart url"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "enum": [
                            "TTP"
                        ],
                        "type": "string",
                        "name": "flow",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "email",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "first_name",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "last_name",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "user_id",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "name",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "account_id",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "enum": [
                            "BUS-CLOUD-EDR-SER-01",
                            "BUS-EPP-LINUX-SER-01",
                            "BUS-CLOUD-EPP-01",
                            "BUS-EDR-WIN-SER-01",
                            "BUS-EPP-WIN-SER-01",
                            "BUS-CLOUD-EPR-01",
                            "BUS-CLOUD-EPP-SER-01",
                            "BUS-CLOUD-EPP-SS-02",
                            "BUS-CLOUD-EPP-SA-03",
                            "BUS-CLOUD-EDR-SS-02",
                            "BUS-CLOUD-EDR-SA-03",
                            "BUS-CLD-EP-SS-SER-02",
                            "BUS-CLD-EP-SA-SER-03",
                            "BUS-CLD-ED-SS-SER-02",
                            "BUS-CLD-ED-SA-SER-03",
                            "BUS-SITE-EDU-01",
                            "BUS-SITE-EDU-02",
                            "BUS-CLOUD-IR-01",
                            "BUS-CLOUD-IRSL-01",
                            "BUS-MBVM-01",
                            "BUS-MBVPM-01",
                            "BUS-CLOUD-MDR-01",
                            "BUS-MBDNS-01",
                            "BUS-CLOUD-EDR-FR30-01",
                            "BUS-CLOUD-EDR-FR90-01",
                            "BUS-MBAB-01",
                            "BUS-MBCSS-01",
                            "NCEP-B",
                            "NCEP-B-ONLINE",
                            "NCEDR-B-ONLINE",
                            "NCEDR-B",
                            "NCEPR-B",
                            "NCEPS-B",
                            "NCEDRS-B"
                        ],
                        "type": "string",
                        "name": "product_catalog_and_code",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "format": "int32",
                        "type": "integer",
                        "name": "endpoints_used",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "license_key",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "source",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "cjEvent",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "Boolean",
                        "name": "async",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "promo",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "mid",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "country",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "enum": [
                            "USD",
                            "EUR",
                            "GBP",
                            "AUD"
                        ],
                        "type": "string",
                        "name": "currency",
                        "required": false
                    }
                ],
                "description": "Generate Nebula cart url",
                "operationId": "postGoToCartNebula",
                "tags": [
                    "go-to-cart"
                ]
            }
        },
        "/metadata/map_regions": {
            "post": {
                "summary": "Map Regions",
                "responses": {
                    "201": {
                        "description": "Map Regions"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "default": true,
                        "in": "formData",
                        "type": "Boolean",
                        "name": "cache",
                        "required": false
                    }
                ],
                "description": "Map Regions",
                "operationId": "postMetadataMapRegions",
                "tags": [
                    "metadata"
                ]
            }
        },
        "/jwt-secure/encrypt": {
            "post": {
                "summary": "Encrypt data",
                "responses": {
                    "201": {
                        "description": "Encrypt data"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "format": "int32",
                        "type": "integer",
                        "name": "expires_at",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "data",
                        "required": true
                    }
                ],
                "description": "Encrypt data",
                "operationId": "postJwtSecureEncrypt",
                "tags": [
                    "jwt-secure"
                ]
            }
        },
        "/keys/order/email": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "keys"
                ],
                "responses": {
                    "201": {
                        "description": "created Email"
                    }
                },
                "operationId": "postKeysOrderEmail",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/ams/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get cart data",
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get cart data"
                    }
                },
                "operationId": "getAmsId",
                "description": "Get cart data",
                "tags": [
                    "ams"
                ]
            }
        },
        "/metadata/add_product_catalog": {
            "post": {
                "summary": "Add products to database",
                "responses": {
                    "201": {
                        "description": "Add products to database"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "default": true,
                        "in": "formData",
                        "type": "Boolean",
                        "name": "cache",
                        "required": false
                    }
                ],
                "description": "Add products to database",
                "operationId": "postMetadataAddProductCatalog",
                "tags": [
                    "metadata"
                ]
            }
        },
        "/jwt-secure/batch/encrypt": {
            "post": {
                "summary": "Encrypt batch data",
                "responses": {
                    "201": {
                        "description": "Encrypt batch data"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "array",
                        "name": "items",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "format": "int32",
                        "type": "integer",
                        "name": "items[expires_at]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "items[data]",
                        "required": true
                    }
                ],
                "description": "Encrypt batch data",
                "operationId": "postJwtSecureBatchEncrypt",
                "tags": [
                    "jwt-secure"
                ]
            }
        },
        "/purchase/{purchase_id}/qty": {
            "post": {
                "summary": "Update Qty",
                "responses": {
                    "201": {
                        "description": "Update Qty"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "purchase_id",
                        "required": true
                    }
                ],
                "description": "Update Qty",
                "operationId": "postPurchasePurchaseIdQty",
                "tags": [
                    "purchase"
                ]
            }
        },
        "/sspl_flow/{id}/bill_to": {
            "put": {
                "summary": "Rest Put API Proxy (BillTo)",
                "responses": {
                    "200": {
                        "description": "Rest Put API Proxy (BillTo)"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "firstName",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "lastName",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "company",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "addressLine1",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "phone",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "country",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "stateProvince",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "city",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "postalCode",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "taxExemptionCode",
                        "required": false
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    }
                ],
                "description": "Rest Put API Proxy (BillTo)",
                "operationId": "putSsplFlowIdBillTo",
                "tags": [
                    "sspl_flow"
                ]
            }
        },
        "/sspl_flow/status": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Status NSS process",
                "responses": {
                    "200": {
                        "description": "Status NSS process"
                    }
                },
                "operationId": "getSsplFlowStatus",
                "description": "Status NSS process",
                "tags": [
                    "sspl_flow"
                ]
            }
        },
        "/metadata/add_countries": {
            "post": {
                "summary": "Add countries to database",
                "responses": {
                    "201": {
                        "description": "Add countries to database"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "default": true,
                        "in": "formData",
                        "type": "Boolean",
                        "name": "cache",
                        "required": false
                    }
                ],
                "description": "Add countries to database",
                "operationId": "postMetadataAddCountries",
                "tags": [
                    "metadata"
                ]
            }
        },
        "/jwt-secure/decrypt": {
            "post": {
                "summary": "Decrypt data",
                "responses": {
                    "201": {
                        "description": "Decrypt data"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "token",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "object",
                        "name": "invoice",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "invoice[id]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "invoice[code]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "invoice[name]",
                        "required": true
                    }
                ],
                "description": "Decrypt data",
                "operationId": "postJwtSecureDecrypt",
                "tags": [
                    "jwt-secure"
                ]
            }
        },
        "/cart": {
            "post": {
                "summary": "Create cart",
                "responses": {
                    "201": {
                        "description": "Create cart"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "email",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "enum": [
                            "NCEP-B",
                            "NCEP-B-ONLINE",
                            "NCEDR-B-ONLINE",
                            "NCEDR-B",
                            "NCEPR-B",
                            "NCEPS-B",
                            "NCEDRS-B"
                        ],
                        "type": "string",
                        "name": "sku",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "in": "formData",
                        "format": "int32",
                        "maximum": 99,
                        "type": "integer",
                        "required": true,
                        "name": "quantity"
                    },
                    {
                        "in": "formData",
                        "format": "int32",
                        "type": "integer",
                        "enum": [
                            365,
                            730,
                            1095
                        ],
                        "name": "termLength",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "source",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "cjEvent",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "token",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "action",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "promo",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "mid",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "enum": [
                            "USD",
                            "CAD",
                            "AUD",
                            "EUR",
                            "GBP"
                        ],
                        "type": "string",
                        "name": "currency",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "country",
                        "required": false
                    }
                ],
                "description": "Create cart",
                "operationId": "postCart",
                "tags": [
                    "cart"
                ]
            }
        },
        "/cat/countries": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Country info API",
                "parameters": [
                    {
                        "in": "query",
                        "type": "string",
                        "name": "iso2_char",
                        "required": true
                    },
                    {
                        "in": "query",
                        "type": "string",
                        "name": "vat_num",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Country info API"
                    }
                },
                "operationId": "getCatCountries",
                "description": "Country info API",
                "tags": [
                    "cat"
                ]
            }
        },
        "/authdotnet/charge": {
            "post": {
                "summary": "Endpoint to charge credit card and obtain token",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Endpoint to charge credit card and obtain token"
                    }
                },
                "operationId": "postAuthdotnetCharge",
                "description": "Endpoint to charge credit card and obtain token",
                "tags": [
                    "authdotnet"
                ]
            }
        },
        "/authdotnet/checkout": {
            "post": {
                "summary": "Checkout endpoint to authorize credit card and obtain token",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Checkout endpoint to authorize credit card and obtain token"
                    }
                },
                "operationId": "postAuthdotnetCheckout",
                "description": "Checkout endpoint to authorize credit card and obtain token",
                "tags": [
                    "authdotnet"
                ]
            }
        },
        "/ams/{id}/prices": {
            "put": {
                "summary": "Change quantity",
                "responses": {
                    "200": {
                        "description": "Change quantity"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "array",
                        "name": "items",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "items[sku]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "format": "int32",
                        "type": "integer",
                        "name": "items[quantity]",
                        "required": true
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    }
                ],
                "description": "Change quantity",
                "operationId": "putAmsIdPrices",
                "tags": [
                    "ams"
                ]
            }
        },
        "/ams/bill_to": {
            "put": {
                "summary": "Rest Put API Proxy (BillTo)",
                "responses": {
                    "200": {
                        "description": "Rest Put API Proxy (BillTo)"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "firstName",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "lastName",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "company",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "addressLine1",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "phone",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "country",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "stateProvince",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "city",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "postalCode",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "taxExemptionCode",
                        "required": false
                    }
                ],
                "description": "Rest Put API Proxy (BillTo)",
                "operationId": "putAmsBillTo",
                "tags": [
                    "ams"
                ]
            }
        },
        "/cart_addons": {
            "post": {
                "summary": "Create Cart Addon",
                "responses": {
                    "201": {
                        "description": "Create Cart Addon"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "json",
                        "name": "product_rules",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "json",
                        "name": "addon_rules",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "json",
                        "name": "remove_rules",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "format": "int32",
                        "type": "integer",
                        "name": "priority",
                        "required": true
                    }
                ],
                "description": "Create Cart Addon",
                "operationId": "postCartAddons",
                "tags": [
                    "cart_addons"
                ]
            },
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "List Cart Addons",
                "responses": {
                    "200": {
                        "description": "List Cart Addons"
                    }
                },
                "operationId": "getCartAddons",
                "description": "List Cart Addons",
                "tags": [
                    "cart_addons"
                ]
            }
        },
        "/ams/{id}/payment": {
            "post": {
                "summary": "Add payment method",
                "responses": {
                    "201": {
                        "description": "Add payment method"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "firstName",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "lastName",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "country",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "addressLine1",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "addressLine2",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "city",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "stateProvince",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "postalCode",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "expirationMonth",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "expirationYear",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "dataDesc",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "dataValue",
                        "required": true
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    }
                ],
                "description": "Add payment method",
                "operationId": "postAmsIdPayment",
                "tags": [
                    "ams"
                ]
            },
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get payment data",
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get payment data"
                    }
                },
                "operationId": "getAmsIdPayment",
                "description": "Get payment data",
                "tags": [
                    "ams"
                ]
            }
        },
        "/checkout": {
            "post": {
                "summary": "Start NSS process",
                "responses": {
                    "201": {
                        "description": "Start NSS process"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "email",
                        "required": true
                    }
                ],
                "description": "Start NSS process",
                "operationId": "postCheckout",
                "tags": [
                    "checkout"
                ]
            }
        },
        "/sspl_flow/currency": {
            "post": {
                "summary": "Change currency",
                "responses": {
                    "201": {
                        "description": "Change currency"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "enum": [
                            "USD",
                            "CAD",
                            "AUD",
                            "EUR",
                            "GBP"
                        ],
                        "type": "string",
                        "name": "currency",
                        "required": true
                    }
                ],
                "description": "Change currency",
                "operationId": "postSsplFlowCurrency",
                "tags": [
                    "sspl_flow"
                ]
            }
        },
        "/contracts/pull/{contract_id}": {
            "post": {
                "summary": "Pull contract updates",
                "responses": {
                    "201": {
                        "description": "Pull contract updates"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "contract_id",
                        "required": true
                    }
                ],
                "description": "Pull contract updates",
                "operationId": "postContractsPullContractId",
                "tags": [
                    "contracts"
                ]
            }
        },
        "/sspl_flow/pwd": {
            "post": {
                "summary": "Pass NSS authentication",
                "responses": {
                    "201": {
                        "description": "Pass NSS authentication"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "password",
                        "required": true
                    }
                ],
                "description": "Pass NSS authentication",
                "operationId": "postSsplFlowPwd",
                "tags": [
                    "sspl_flow"
                ]
            }
        },
        "/go-to-cart/add-seats": {
            "post": {
                "summary": "Add seats",
                "responses": {
                    "201": {
                        "description": "Add seats"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "object",
                        "name": "Contract",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "Contract[Id]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "Contract[Name]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "Contract[email]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "Contract[EndDate]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "Contract[Currency]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "Contract[Shared_License_Key__c]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "array",
                        "name": "Contract[Product]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "Contract[Product][SKU__c]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "Contract[Product][SBQQ__Product__c]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "format": "int32",
                        "type": "integer",
                        "name": "Contract[Product][SBQQ__Quantity__c]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "Contract[Product][Product_Code__c]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "object",
                        "name": "Contract[PaymentMethod]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "Contract[PaymentMethod][Id]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "Contract[PaymentMethod][GatewayResponse__c]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "Contract[PaymentMethod][CustomerPaymentProfileID__c]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "Contract[PaymentMethod][CustomerProfileID__c]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "Contract[PaymentMethod][CardLastFour__c]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "source",
                        "required": false
                    }
                ],
                "description": "Add seats",
                "operationId": "postGoToCartAddSeats",
                "tags": [
                    "go-to-cart"
                ]
            }
        },
        "/legacy/mailer": {
            "post": {
                "summary": "Backward compatibility for Lira2.0#Mailer",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Backward compatibility for Lira2.0#Mailer"
                    }
                },
                "operationId": "postLegacyMailer",
                "description": "Backward compatibility for Lira2.0#Mailer",
                "tags": [
                    "legacy"
                ]
            }
        },
        "/authdotnet/authorize": {
            "post": {
                "summary": "Endpoint to authorize credit card and obtain token",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Endpoint to authorize credit card and obtain token"
                    }
                },
                "operationId": "postAuthdotnetAuthorize",
                "description": "Endpoint to authorize credit card and obtain token",
                "tags": [
                    "authdotnet"
                ]
            }
        },
        "/payment-methods/external/session/primary": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "Boolean",
                        "name": "makePrimaryCard",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "created Primary"
                    }
                },
                "operationId": "postPaymentMethodsExternalSessionPrimary",
                "tags": [
                    "payment-methods"
                ]
            }
        },
        "/inv/trx/{sfdc_account_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get invoice transaction data",
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "sfdc_account_id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get invoice transaction data"
                    }
                },
                "operationId": "getInvTrxSfdcAccountId",
                "description": "Get invoice transaction data",
                "tags": [
                    "inv"
                ]
            }
        },
        "/products/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get product details",
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get product details"
                    }
                },
                "operationId": "getProductsId",
                "description": "Get product details",
                "tags": [
                    "products"
                ]
            }
        },
        "/cat/mappings/promotions": {
            "post": {
                "summary": "Post promotions",
                "responses": {
                    "201": {
                        "description": "Post promotions"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "array",
                        "name": "Online_Promotion__c",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "Online_Promotion__c[CurrencyIsoCode]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "Online_Promotion__c[Name]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "Online_Promotion__c[Id]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "format": "int32",
                        "type": "integer",
                        "name": "Online_Promotion__c[Discount_Percent__c]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "object",
                        "name": "Online_Promotion__c[Eligible_Product__r]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "Online_Promotion__c[Eligible_Product__r][ProductCode]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "Online_Promotion__c[Eligible_Product__r][Description]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "Online_Promotion__c[Eligible_Product__r][Id]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "Online_Promotion__c[Eligible_Product__r][Name]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "Online_Promotion__c[Eligible_Product__r][SKU__c]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "format": "double",
                        "type": "number",
                        "name": "Online_Promotion__c[List_Price__c]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "format": "double",
                        "type": "number",
                        "name": "Online_Promotion__c[MSRP__c]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "Online_Promotion__c[Offer_Type__c]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "format": "double",
                        "type": "number",
                        "name": "Online_Promotion__c[Promo_Discount_Per_Unit__c]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "format": "double",
                        "type": "number",
                        "name": "Online_Promotion__c[Promo_Price__c]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "format": "int32",
                        "type": "integer",
                        "name": "Online_Promotion__c[Term__c]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "format": "int32",
                        "type": "integer",
                        "name": "Online_Promotion__c[Tier__c]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "format": "int32",
                        "type": "integer",
                        "name": "Online_Promotion__c[Tier_Max__c]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "format": "int32",
                        "type": "integer",
                        "name": "Online_Promotion__c[Tier_Min__c]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "object",
                        "name": "Online_Promotion__c[Promotional_Offer__r]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "Online_Promotion__c[Promotional_Offer__r][CurrencyIsoCode]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "Online_Promotion__c[Promotional_Offer__r][Name]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "format": "int32",
                        "type": "integer",
                        "name": "Online_Promotion__c[Promotional_Offer__r][Controlling_Quantity__c]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "Online_Promotion__c[Promotional_Offer__r][Dependent_Product__c]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "format": "int32",
                        "type": "integer",
                        "name": "Online_Promotion__c[Promotional_Offer__r][Discount_Percent__c]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "format": "double",
                        "type": "number",
                        "name": "Online_Promotion__c[Promotional_Offer__r][Discount_Amount__c]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "Online_Promotion__c[Promotional_Offer__r][Eligible_Product__c]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "Online_Promotion__c[Promotional_Offer__r][End_Date__c]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "Boolean",
                        "name": "Online_Promotion__c[Promotional_Offer__r][Is_Active__c]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "Boolean",
                        "name": "Online_Promotion__c[Promotional_Offer__r][Online_Only__c]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "Online_Promotion__c[Promotional_Offer__r][Promotion_Details__c]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "format": "int32",
                        "type": "integer",
                        "name": "Online_Promotion__c[Promotional_Offer__r][Promotion_Quantity__c]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "Online_Promotion__c[Promotional_Offer__r][Start_Date__c]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "Online_Promotion__c[Promotional_Offer__r][Terms_and_Conditions__c]",
                        "required": false
                    }
                ],
                "description": "Post promotions",
                "operationId": "postCatMappingsPromotions",
                "tags": [
                    "cat"
                ]
            }
        },
        "/nss_flow/currency": {
            "post": {
                "summary": "Change currency",
                "responses": {
                    "201": {
                        "description": "Change currency"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "enum": [
                            "USD",
                            "CAD",
                            "AUD",
                            "EUR",
                            "GBP"
                        ],
                        "type": "string",
                        "name": "currency",
                        "required": true
                    }
                ],
                "description": "Change currency",
                "operationId": "postNssFlowCurrency",
                "tags": [
                    "nss_flow"
                ]
            }
        },
        "/ams/{id}/payment/active": {
            "put": {
                "summary": "Set active payment method",
                "responses": {
                    "200": {
                        "description": "Set active payment method"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "paymentMethodId",
                        "required": true
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    }
                ],
                "description": "Set active payment method",
                "operationId": "putAmsIdPaymentActive",
                "tags": [
                    "ams"
                ]
            }
        },
        "/authdotnet/settle/{sfdc_payment_method_id}/{sfdc_invoice_id}": {
            "post": {
                "summary": "Settle payment",
                "responses": {
                    "201": {
                        "description": "Settle payment"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "sfdc_payment_method_id",
                        "required": true
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "sfdc_invoice_id",
                        "required": true
                    }
                ],
                "description": "Settle payment",
                "operationId": "postAuthdotnetSettleSfdcPaymentMethodIdSfdcInvoiceId",
                "tags": [
                    "authdotnet"
                ]
            }
        },
        "/authdotnet/settle_depr/{sfdc_payment_method_id}/{sfdc_invoice_id}": {
            "post": {
                "summary": "Settle payment",
                "responses": {
                    "201": {
                        "description": "Settle payment"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "sfdc_payment_method_id",
                        "required": true
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "sfdc_invoice_id",
                        "required": true
                    }
                ],
                "description": "Settle payment",
                "operationId": "postAuthdotnetSettleDeprSfdcPaymentMethodIdSfdcInvoiceId",
                "tags": [
                    "authdotnet"
                ]
            }
        },
        "/nss_flow/{id}/products/{sku}": {
            "post": {
                "summary": "Rest Create API Proxy (Products)",
                "responses": {
                    "201": {
                        "description": "Rest Create API Proxy (Products)"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "minimum": 1,
                        "in": "formData",
                        "format": "int32",
                        "maximum": 99,
                        "type": "integer",
                        "required": true,
                        "name": "quantity"
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "sku",
                        "required": true
                    }
                ],
                "description": "Rest Create API Proxy (Products)",
                "operationId": "postNssFlowIdProductsSku",
                "tags": [
                    "nss_flow"
                ]
            },
            "put": {
                "summary": "Rest Put API Proxy (Products)",
                "responses": {
                    "200": {
                        "description": "Rest Put API Proxy (Products)"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "minimum": 1,
                        "in": "formData",
                        "format": "int32",
                        "maximum": 99,
                        "type": "integer",
                        "required": true,
                        "name": "quantity"
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "sku",
                        "required": true
                    }
                ],
                "description": "Rest Put API Proxy (Products)",
                "operationId": "putNssFlowIdProductsSku",
                "tags": [
                    "nss_flow"
                ]
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Rest Delete API Proxy (Products)",
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "sku",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Rest Delete API Proxy (Products)"
                    }
                },
                "operationId": "deleteNssFlowIdProductsSku",
                "description": "Rest Delete API Proxy (Products)",
                "tags": [
                    "nss_flow"
                ]
            }
        },
        "/contracts/key_delay": {
            "post": {
                "summary": "Set key delay",
                "responses": {
                    "201": {
                        "description": "Set key delay"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "license_key",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "email",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "format": "int32",
                        "type": "integer",
                        "name": "delay_in_min",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "ref",
                        "required": false
                    }
                ],
                "description": "Set key delay",
                "operationId": "postContractsKeyDelay",
                "tags": [
                    "contracts"
                ]
            }
        },
        "/authdotnet/callback": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "authdotnet"
                ],
                "responses": {
                    "201": {
                        "description": "created Callback"
                    }
                },
                "operationId": "postAuthdotnetCallback",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/authdotnet/payment": {
            "post": {
                "summary": "Endpoint to receive authdotnet payment event",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Endpoint to receive authdotnet payment event"
                    }
                },
                "operationId": "postAuthdotnetPayment",
                "description": "Endpoint to receive authdotnet payment event",
                "tags": [
                    "authdotnet"
                ]
            }
        },
        "/checkout/pwd": {
            "post": {
                "summary": "Pass NSS authentication",
                "responses": {
                    "201": {
                        "description": "Pass NSS authentication"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "password",
                        "required": true
                    }
                ],
                "description": "Pass NSS authentication",
                "operationId": "postCheckoutPwd",
                "tags": [
                    "checkout"
                ]
            }
        },
        "/go-to-cart/add-seats/{nebula_key}": {
            "get": {
                "tags": [
                    "go-to-cart"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "nebula_key",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get AddSeat(s)"
                    }
                },
                "operationId": "getGoToCartAddSeatsNebulaKey",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/nss_flow/pwd": {
            "post": {
                "summary": "Pass NSS authentication",
                "responses": {
                    "201": {
                        "description": "Pass NSS authentication"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "password",
                        "required": true
                    }
                ],
                "description": "Pass NSS authentication",
                "operationId": "postNssFlowPwd",
                "tags": [
                    "nss_flow"
                ]
            }
        },
        "/checkout/status": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Status NSS process",
                "responses": {
                    "200": {
                        "description": "Status NSS process"
                    }
                },
                "operationId": "getCheckoutStatus",
                "description": "Status NSS process",
                "tags": [
                    "checkout"
                ]
            }
        },
        "/go-to-cart": {
            "post": {
                "summary": "Capture cart params",
                "responses": {
                    "201": {
                        "description": "Capture cart params"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "enum": [
                            "NSS"
                        ],
                        "type": "string",
                        "name": "flow",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "enum": [
                            "NCEP-B",
                            "NCEP-B-ONLINE",
                            "NCEDR-B-ONLINE",
                            "NCEDR-B",
                            "NCEPR-B",
                            "NCEPS-B",
                            "NCEDRS-B"
                        ],
                        "type": "string",
                        "name": "sku",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "in": "formData",
                        "format": "int32",
                        "maximum": 99,
                        "type": "integer",
                        "required": true,
                        "name": "qty"
                    },
                    {
                        "in": "formData",
                        "format": "int32",
                        "type": "integer",
                        "enum": [
                            365,
                            730,
                            1095
                        ],
                        "name": "term_length",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "enum": [
                            "USD",
                            "EUR",
                            "GBP",
                            "AUD"
                        ],
                        "type": "string",
                        "name": "currency",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "source",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "cjEvent",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "promo",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "mid",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "country",
                        "required": false
                    }
                ],
                "description": "Capture cart params",
                "operationId": "postGoToCart",
                "tags": [
                    "go-to-cart"
                ]
            }
        },
        "/checkout/cart/{id}/bill_to": {
            "put": {
                "summary": "Rest Put API Proxy (BillTo)",
                "responses": {
                    "200": {
                        "description": "Rest Put API Proxy (BillTo)"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    }
                ],
                "description": "Rest Put API Proxy (BillTo)",
                "operationId": "putCheckoutCartIdBillTo",
                "tags": [
                    "checkout"
                ]
            }
        },
        "/subscriptions": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Endpoint to get current subscription status",
                "parameters": [
                    {
                        "in": "query",
                        "type": "string",
                        "name": "master_subscription_id",
                        "required": false,
                        "description": "master subscription id"
                    },
                    {
                        "in": "query",
                        "type": "string",
                        "name": "contract_name",
                        "required": false,
                        "description": "contract name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Styx formatted json for key request"
                    },
                    "400": {
                        "description": "400 Bad Request"
                    }
                },
                "operationId": "getSubscriptions",
                "description": "API returns styx formatted json for key request",
                "tags": [
                    "subscriptions"
                ]
            }
        },
        "/authdotnet/customer": {
            "post": {
                "summary": "Endpoint to receive authdotnet customer event",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Endpoint to receive authdotnet customer event"
                    }
                },
                "operationId": "postAuthdotnetCustomer",
                "description": "Endpoint to receive authdotnet customer event",
                "tags": [
                    "authdotnet"
                ]
            }
        },
        "/metadata/cache_products": {
            "post": {
                "summary": "Cache Products",
                "responses": {
                    "201": {
                        "description": "Cache Products"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "default": true,
                        "in": "formData",
                        "type": "Boolean",
                        "name": "cache",
                        "required": false
                    }
                ],
                "description": "Cache Products",
                "operationId": "postMetadataCacheProducts",
                "tags": [
                    "metadata"
                ]
            }
        },
        "/sspl_flow/mappings": {
            "post": {
                "summary": "Get mappings",
                "responses": {
                    "201": {
                        "description": "Get mappings"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "array",
                        "name": "sku",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "enum": [
                            "USD",
                            "CAD",
                            "AUD",
                            "EUR",
                            "GBP"
                        ],
                        "type": "string",
                        "name": "currency",
                        "required": false
                    }
                ],
                "description": "Get mappings",
                "operationId": "postSsplFlowMappings",
                "tags": [
                    "sspl_flow"
                ]
            }
        },
        "/cat/mappings": {
            "post": {
                "summary": "Get mappings",
                "responses": {
                    "201": {
                        "description": "Get mappings"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "array",
                        "name": "sku",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "enum": [
                            "USD",
                            "CAD",
                            "AUD",
                            "EUR",
                            "GBP"
                        ],
                        "type": "string",
                        "name": "currency",
                        "required": false
                    }
                ],
                "description": "Get mappings",
                "operationId": "postCatMappings",
                "tags": [
                    "cat"
                ]
            }
        },
        "/compare/{request_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Compare NSS objects",
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "request_id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Compare NSS objects"
                    }
                },
                "operationId": "getCompareRequestId",
                "description": "Compare NSS objects",
                "tags": [
                    "compare"
                ]
            }
        },
        "/checkout/cart/{id}/products": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Rest Delete API Proxy (Delete All Products)",
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Rest Delete API Proxy (Delete All Products)"
                    }
                },
                "operationId": "deleteCheckoutCartIdProducts",
                "description": "Rest Delete API Proxy (Delete All Products)",
                "tags": [
                    "checkout"
                ]
            }
        },
        "/cat/tax": {
            "post": {
                "summary": "Tax request",
                "responses": {
                    "201": {
                        "description": "Tax request"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "format": "double",
                        "type": "number",
                        "name": "sum",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "postal_code",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "state_province",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "country",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "address_line",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "city",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "vat_id",
                        "required": false
                    }
                ],
                "description": "Tax request",
                "operationId": "postCatTax",
                "tags": [
                    "cat"
                ]
            }
        },
        "/sec/salt": {
            "post": {
                "summary": "Access API",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Access API"
                    }
                },
                "operationId": "postSecSalt",
                "description": "Access API",
                "tags": [
                    "sec"
                ]
            }
        },
        "/go-to-cart/payment-methods/internal/session": {
            "post": {
                "summary": "Start management session",
                "responses": {
                    "201": {
                        "description": "Start management session"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "salesforceAccountId",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "enum": [
                            "add_card",
                            "replace_card"
                        ],
                        "type": "string",
                        "name": "type",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "country",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "Boolean",
                        "name": "autoRenew",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "Boolean",
                        "name": "makePrimaryCard",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "cardLast4Digits",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "cardExpirationMonth",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "cardExpirationYear",
                        "required": false
                    }
                ],
                "description": "Start management session",
                "operationId": "postGoToCartPaymentMethodsInternalSession",
                "tags": [
                    "go-to-cart"
                ]
            }
        },
        "/gw/callback": {
            "post": {
                "summary": "Test callback",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Test callback"
                    }
                },
                "operationId": "postGwCallback",
                "description": "Test callback",
                "tags": [
                    "gw"
                ]
            }
        },
        "/gw/charge": {
            "post": {
                "summary": "Charge transaction integration",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Charge transaction integration"
                    }
                },
                "operationId": "postGwCharge",
                "description": "Charge transaction integration",
                "tags": [
                    "gw"
                ]
            }
        },
        "/keys/amend/{contract_id}": {
            "post": {
                "summary": "Endpoint for amendment Orders",
                "responses": {
                    "201": {
                        "description": "Endpoint for amendment Orders"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "contract_id",
                        "required": true
                    }
                ],
                "description": "Endpoint for amendment Orders",
                "operationId": "postKeysAmendContractId",
                "tags": [
                    "keys"
                ]
            }
        },
        "/metadata/add_state_provinces": {
            "post": {
                "summary": "Add states to database",
                "responses": {
                    "201": {
                        "description": "Add states to database"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "default": true,
                        "in": "formData",
                        "type": "Boolean",
                        "name": "cache",
                        "required": false
                    }
                ],
                "description": "Add states to database",
                "operationId": "postMetadataAddStateProvinces",
                "tags": [
                    "metadata"
                ]
            }
        },
        "/authdotnet/subscription": {
            "post": {
                "summary": "Endpoint to receive authdotnet subscription event",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Endpoint to receive authdotnet subscription event"
                    }
                },
                "operationId": "postAuthdotnetSubscription",
                "description": "Endpoint to receive authdotnet subscription event",
                "tags": [
                    "authdotnet"
                ]
            }
        },
        "/nss_flow/status": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Status NSS process",
                "responses": {
                    "200": {
                        "description": "Status NSS process"
                    }
                },
                "operationId": "getNssFlowStatus",
                "description": "Status NSS process",
                "tags": [
                    "nss_flow"
                ]
            }
        },
        "/nebula/sales": {
            "post": {
                "summary": "Contact sales",
                "responses": {
                    "201": {
                        "description": "Contact sales"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "source",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "account_name",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "email",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "object",
                        "name": "sales_dl_email",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "sales_dl_email[to]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "array",
                        "name": "sales_dl_email[cc]",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "license_key",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "array",
                        "name": "products",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "enum": [
                            "BUS-CLOUD-EDR-SER-01",
                            "BUS-EPP-LINUX-SER-01",
                            "BUS-CLOUD-EPP-01",
                            "BUS-EDR-WIN-SER-01",
                            "BUS-EPP-WIN-SER-01",
                            "BUS-CLOUD-EPR-01",
                            "BUS-CLOUD-EPP-SER-01",
                            "BUS-CLOUD-EPP-SS-02",
                            "BUS-CLOUD-EPP-SA-03",
                            "BUS-CLOUD-EDR-SS-02",
                            "BUS-CLOUD-EDR-SA-03",
                            "BUS-CLD-EP-SS-SER-02",
                            "BUS-CLD-EP-SA-SER-03",
                            "BUS-CLD-ED-SS-SER-02",
                            "BUS-CLD-ED-SA-SER-03",
                            "BUS-SITE-EDU-01",
                            "BUS-SITE-EDU-02",
                            "BUS-CLOUD-IR-01",
                            "BUS-CLOUD-IRSL-01",
                            "BUS-MBVM-01",
                            "BUS-MBVPM-01",
                            "BUS-CLOUD-MDR-01",
                            "BUS-MBDNS-01",
                            "BUS-CLOUD-EDR-FR30-01",
                            "BUS-CLOUD-EDR-FR90-01",
                            "BUS-MBAB-01",
                            "BUS-MBCSS-01",
                            "NCEP-B",
                            "NCEP-B-ONLINE",
                            "NCEDR-B-ONLINE",
                            "NCEDR-B",
                            "NCEPR-B",
                            "NCEPS-B",
                            "NCEDRS-B"
                        ],
                        "type": "string",
                        "name": "products[product_catalog_and_code]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "format": "int32",
                        "type": "integer",
                        "name": "products[used_qty]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "format": "int32",
                        "type": "integer",
                        "name": "products[purchased_qty]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "products[license_expires_at]",
                        "required": false
                    }
                ],
                "description": "Contact sales",
                "operationId": "postNebulaSales",
                "tags": [
                    "nebula"
                ]
            }
        },
        "/payment-methods/external/session/deliver": {
            "post": {
                "summary": "Deliver payment method",
                "responses": {
                    "201": {
                        "description": "Deliver payment method"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "paymentMethodId",
                        "required": true
                    }
                ],
                "description": "Deliver payment method",
                "operationId": "postPaymentMethodsExternalSessionDeliver",
                "tags": [
                    "payment-methods"
                ]
            }
        },
        "/cart-data/{flow}/{id}": {
            "put": {
                "summary": "Override cart data",
                "responses": {
                    "200": {
                        "description": "Override cart data"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "flow",
                        "required": true
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    }
                ],
                "description": "Override cart data",
                "operationId": "putCartDataFlowId",
                "tags": [
                    "cart-data"
                ]
            },
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get cart data",
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "flow",
                        "required": true
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get cart data"
                    }
                },
                "operationId": "getCartDataFlowId",
                "description": "Get cart data",
                "tags": [
                    "cart-data"
                ]
            }
        },
        "/cart-data/{flow}/{id}/sales": {
            "post": {
                "summary": "Contact sales",
                "responses": {
                    "201": {
                        "description": "Contact sales"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "flow",
                        "required": true
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    }
                ],
                "description": "Contact sales",
                "operationId": "postCartDataFlowIdSales",
                "tags": [
                    "cart-data"
                ]
            }
        },
        "/sspl_flow/{id}/products/{sku}": {
            "post": {
                "summary": "Rest Create API Proxy (Products)",
                "responses": {
                    "201": {
                        "description": "Rest Create API Proxy (Products)"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "format": "int32",
                        "type": "integer",
                        "name": "quantity",
                        "required": true
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "sku",
                        "required": true
                    }
                ],
                "description": "Rest Create API Proxy (Products)",
                "operationId": "postSsplFlowIdProductsSku",
                "tags": [
                    "sspl_flow"
                ]
            },
            "put": {
                "summary": "Rest Put API Proxy (Products)",
                "responses": {
                    "200": {
                        "description": "Rest Put API Proxy (Products)"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "format": "int32",
                        "type": "integer",
                        "name": "quantity",
                        "required": true
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "sku",
                        "required": true
                    }
                ],
                "description": "Rest Put API Proxy (Products)",
                "operationId": "putSsplFlowIdProductsSku",
                "tags": [
                    "sspl_flow"
                ]
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Rest Delete API Proxy (Products)",
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "sku",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Rest Delete API Proxy (Products)"
                    }
                },
                "operationId": "deleteSsplFlowIdProductsSku",
                "description": "Rest Delete API Proxy (Products)",
                "tags": [
                    "sspl_flow"
                ]
            }
        },
        "/keys/new/{contract_id}": {
            "post": {
                "summary": "Endpoint for new direct-sales orders to request license keys",
                "responses": {
                    "201": {
                        "description": "Endpoint for new direct-sales orders to request license keys"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "contract_id",
                        "required": true
                    }
                ],
                "description": "Endpoint for new direct-sales orders to request license keys",
                "operationId": "postKeysNewContractId",
                "tags": [
                    "keys"
                ]
            }
        },
        "/msp/notification": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "account_name",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "license_key",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "site_name",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "environment_created_date",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "object",
                        "name": "primary_contact_info",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "primary_contact_info[first_name]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "primary_contact_info[last_name]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "primary_contact_info[email]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "platform",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "status",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "created Notification"
                    }
                },
                "operationId": "postMspNotification",
                "tags": [
                    "msp"
                ]
            }
        },
        "/checkout/cart/{id}": {
            "put": {
                "summary": "Rest Put API Proxy (Cart)",
                "responses": {
                    "200": {
                        "description": "Rest Put API Proxy (Cart)"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "format": "int32",
                        "type": "integer",
                        "name": "termLengthInDays",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "taxExemptionCode",
                        "required": false
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    }
                ],
                "description": "Rest Put API Proxy (Cart)",
                "operationId": "putCheckoutCartId",
                "tags": [
                    "checkout"
                ]
            },
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Rest Get API Proxy (Cart)",
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rest Get API Proxy (Cart)"
                    }
                },
                "operationId": "getCheckoutCartId",
                "description": "Rest Get API Proxy (Cart)",
                "tags": [
                    "checkout"
                ]
            }
        },
        "/vatid": {
            "post": {
                "summary": "Endpoint to apply Vat ID",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Endpoint to apply Vat ID"
                    }
                },
                "operationId": "postVatid",
                "description": "Endpoint to apply Vat ID",
                "tags": [
                    "vatid"
                ]
            }
        },
        "/metadata/map_eu_union": {
            "post": {
                "summary": "Map EU Union",
                "responses": {
                    "201": {
                        "description": "Map EU Union"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "default": true,
                        "in": "formData",
                        "type": "Boolean",
                        "name": "cache",
                        "required": false
                    }
                ],
                "description": "Map EU Union",
                "operationId": "postMetadataMapEuUnion",
                "tags": [
                    "metadata"
                ]
            }
        },
        "/sspl_flow/{id}/products": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Rest Delete API Proxy (Delete All Products)",
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Rest Delete API Proxy (Delete All Products)"
                    }
                },
                "operationId": "deleteSsplFlowIdProducts",
                "description": "Rest Delete API Proxy (Delete All Products)",
                "tags": [
                    "sspl_flow"
                ]
            }
        },
        "/nebula/invoices": {
            "post": {
                "summary": "Pull invoices",
                "responses": {
                    "201": {
                        "description": "Pull invoices"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "account_id",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "array",
                        "name": "invoice_ids",
                        "required": false
                    }
                ],
                "description": "Pull invoices",
                "operationId": "postNebulaInvoices",
                "tags": [
                    "nebula"
                ]
            }
        },
        "/cat/products": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Product Info API",
                "responses": {
                    "200": {
                        "description": "Product Info API"
                    }
                },
                "operationId": "getCatProducts",
                "description": "Product Info API",
                "tags": [
                    "cat"
                ]
            }
        },
        "/cart-data/{flow}/bill_to": {
            "put": {
                "summary": "Rest Put API Proxy (BillTo)",
                "responses": {
                    "200": {
                        "description": "Rest Put API Proxy (BillTo)"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "firstName",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "lastName",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "company",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "addressLine1",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "phone",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "country",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "stateProvince",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "city",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "postalCode",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "taxExemptionCode",
                        "required": false
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "flow",
                        "required": true
                    }
                ],
                "description": "Rest Put API Proxy (BillTo)",
                "operationId": "putCartDataFlowBillTo",
                "tags": [
                    "cart-data"
                ]
            }
        },
        "/msp/billing/invoices/{sfdc_account_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get invoice transaction data",
                "parameters": [
                    {
                        "in": "query",
                        "enum": [
                            "opened",
                            "overdue",
                            "paid"
                        ],
                        "type": "string",
                        "name": "status",
                        "required": false
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "sfdc_account_id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get invoice transaction data"
                    }
                },
                "operationId": "getMspBillingInvoicesSfdcAccountId",
                "description": "Get invoice transaction data",
                "tags": [
                    "msp"
                ]
            }
        },
        "/cart_addons/{id}": {
            "put": {
                "summary": "Update Cart Addon",
                "responses": {
                    "200": {
                        "description": "Update Cart Addon"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "json",
                        "name": "product_rules",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "json",
                        "name": "addon_rules",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "json",
                        "name": "remove_rules",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "format": "int32",
                        "type": "integer",
                        "name": "priority",
                        "required": true
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    }
                ],
                "description": "Update Cart Addon",
                "operationId": "putCartAddonsId",
                "tags": [
                    "cart_addons"
                ]
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Delete Cart Addon",
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Delete Cart Addon"
                    }
                },
                "operationId": "deleteCartAddonsId",
                "description": "Delete Cart Addon",
                "tags": [
                    "cart_addons"
                ]
            }
        },
        "/cart-data/{flow}/{id}/payment": {
            "post": {
                "summary": "Submit payment",
                "responses": {
                    "201": {
                        "description": "Submit payment"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "firstName",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "lastName",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "country",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "addressLine1",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "addressLine2",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "city",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "stateProvince",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "postalCode",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "expirationMonth",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "expirationYear",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "dataDesc",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "dataValue",
                        "required": true
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "flow",
                        "required": true
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    }
                ],
                "description": "Submit payment",
                "operationId": "postCartDataFlowIdPayment",
                "tags": [
                    "cart-data"
                ]
            },
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get payment",
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "flow",
                        "required": true
                    },
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get payment"
                    }
                },
                "operationId": "getCartDataFlowIdPayment",
                "description": "Get payment",
                "tags": [
                    "cart-data"
                ]
            }
        },
        "/nss_flow/{id}/products": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Rest Delete API Proxy (Delete All Products)",
                "parameters": [
                    {
                        "in": "path",
                        "format": "int32",
                        "type": "integer",
                        "name": "id",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Rest Delete API Proxy (Delete All Products)"
                    }
                },
                "operationId": "deleteNssFlowIdProducts",
                "description": "Rest Delete API Proxy (Delete All Products)",
                "tags": [
                    "nss_flow"
                ]
            }
        },
        "/gw/profile": {
            "post": {
                "summary": "Validate Chase payment profile",
                "responses": {
                    "201": {
                        "description": "Validate Chase payment profile"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "CustomerPaymentProfileId",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "CustomerProfileId",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "enum": [
                            "USD",
                            "CAD",
                            "AUD",
                            "EUR",
                            "GBP"
                        ],
                        "type": "string",
                        "name": "Currency",
                        "required": true
                    }
                ],
                "description": "Validate Chase payment profile",
                "operationId": "postGwProfile",
                "tags": [
                    "gw"
                ]
            }
        },
        "/nss_flow/sales": {
            "post": {
                "summary": "Contact sales",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Contact sales"
                    }
                },
                "operationId": "postNssFlowSales",
                "description": "Contact sales",
                "tags": [
                    "nss_flow"
                ]
            }
        },
        "/authdotnet/status": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "authdotnet"
                ],
                "responses": {
                    "201": {
                        "description": "created Status"
                    }
                },
                "operationId": "postAuthdotnetStatus",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/cat/promotions": {
            "post": {
                "summary": "Get promotions",
                "responses": {
                    "201": {
                        "description": "Get promotions"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "type": "array",
                        "name": "sku",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "name": "promo",
                        "required": true
                    }
                ],
                "description": "Get promotions",
                "operationId": "postCatPromotions",
                "tags": [
                    "cat"
                ]
            }
        }
    },
    "produces": [
        "application/xml",
        "application/json",
        "application/octet-stream",
        "text/plain"
    ],
    "swagger": "2.0",
    "host": "lira-prod.mwbsys.com",
    "basePath": "/api",
    "tags": [
        {
            "name": "authdotnet",
            "description": "Operations about authdotnets"
        },
        {
            "name": "gw",
            "description": "Operations about gws"
        },
        {
            "name": "inv",
            "description": "Operations about invs"
        },
        {
            "name": "keys",
            "description": "Operations about keys"
        },
        {
            "name": "contracts",
            "description": "Operations about contracts"
        },
        {
            "name": "products",
            "description": "Operations about products"
        },
        {
            "name": "orders",
            "description": "Operations about orders"
        },
        {
            "name": "subscriptions",
            "description": "Operations about subscriptions"
        },
        {
            "name": "vatid",
            "description": "Operations about vatids"
        },
        {
            "name": "legacy",
            "description": "Operations about legacies"
        },
        {
            "name": "purchase",
            "description": "Operations about purchases"
        },
        {
            "name": "sspl_flow",
            "description": "Operations about sspl_flows"
        },
        {
            "name": "go-to-cart",
            "description": "Operations about go-to-carts"
        },
        {
            "name": "cart_addons",
            "description": "Operations about cart_addons"
        },
        {
            "name": "cat",
            "description": "Operations about cats"
        },
        {
            "name": "msp",
            "description": "Operations about msps"
        },
        {
            "name": "sec",
            "description": "Operations about secs"
        },
        {
            "name": "nss_flow",
            "description": "Operations about nss_flows"
        },
        {
            "name": "cart",
            "description": "Operations about carts"
        },
        {
            "name": "checkout",
            "description": "Operations about checkouts"
        },
        {
            "name": "compare",
            "description": "Operations about compares"
        },
        {
            "name": "metadata",
            "description": "Operations about metadata"
        },
        {
            "name": "ams",
            "description": "Operations about ams"
        },
        {
            "name": "jwt-secure",
            "description": "Operations about jwt-secures"
        },
        {
            "name": "cart-data",
            "description": "Operations about cart-data"
        },
        {
            "name": "nebula",
            "description": "Operations about nebulas"
        },
        {
            "name": "payment-methods",
            "description": "Operations about payment-methods"
        },
        {
            "name": "maintenance",
            "description": "Operations about maintenances"
        }
    ]
}
